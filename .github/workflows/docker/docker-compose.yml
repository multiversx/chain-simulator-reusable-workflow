version: "3.9"

services:
  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq-container
    ports:
      - 127.0.0.1:5672:5672
      - 127.0.0.1:15672:15672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - notifier  # Only start with notifier profile

  redis:
    image: "redis:latest"
    container_name: redis-container
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - notifier  # Only start with notifier profile

  events-notifier:
    image: multiversx/events-notifier:latest
    container_name: events-notifier-container
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    entrypoint: >
      /bin/bash -c "apt-get update && apt-get install curl -y
      && sed -i '/Enabled will determine if websocket connector will be enabled or not/{n;s/Enabled = false/Enabled = true/}' ./config/config.toml 
      && sed -i 's|localhost:22111|0.0.0.0:22111|g' ./config/config.toml 
      && sed -i 's|localhost:6379|redis:6379|g' ./config/config.toml 
      && sed -i 's|amqp://guest:guest@localhost:5672|amqp://guest:guest@rabbitmq:5672|g' ./config/config.toml 
      && cat ./config/config.toml
      && ./notifier --check-duplicates=false --api-type=rabbit-api"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:5000/status/metrics"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - notifier  # Only start with notifier profile

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.1
    container_name: elasticsearch-container
    ports:
      - 127.0.0.1:9200:9200
    environment:
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:9200"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - elastic  # Only start with elastic profile

  chainsimulator:
    container_name: chainsimulator
    image: multiversx/chainsimulator
    command: [ "--node-override-config", "./overridable-config.toml" ]
    volumes:
      - ./overridable-config.toml:/multiversx/overridable-config.toml
    depends_on:
      - elasticsearch
    environment:
      ELASTIC_SEARCH_URL: 'http://localhost:9200'
    ports:
      - "8085:8085"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8085/simulator/observers" ]
      interval: 10s
      timeout: 5s
      retries: 5
